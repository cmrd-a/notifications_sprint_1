name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wemake-python-styleguide flake8-html mypy lxml
        pip install -r auth/requirements.txt
        pip install -r etl/requirements.txt
        pip install -r fastapi_app/requirements.txt

    - name: Create directories
      run: |
        mkdir -p reports/auth/wemake-python-styleguide/
        mkdir -p reports/etl/wemake-python-styleguide/
        mkdir -p reports/fastapi_app/wemake-python-styleguide/
        mkdir -p reports/auth/mypy/
        mkdir -p reports/etl/mypy/
        mkdir -p reports/fastapi_app/mypy/

    - name: Lint with wemake-python-styleguide
      run: |
        flake8 auth/src --count --exit-zero --select=E9,F63,F7 --max-complexity=10 --max-line-length=120 --format=html --htmldir=reports/auth/wemake-python-styleguide/
        flake8 etl/src --count --exit-zero --select=E9,F63,F7 --max-complexity=10 --max-line-length=120 --format=html --htmldir=reports/etl/wemake-python-styleguide/
        flake8 fastapi_app/src --count --exit-zero --select=E9,F63,F7 --max-complexity=10 --max-line-length=120 --format=html --htmldir=reports/fastapi_app/wemake-python-styleguide/

    - name: Lint with mypy
      run: |
        mypy --html-report reports/auth/mypy/ auth/src/auth_app || true
        mypy --html-report reports/etl/mypy/ etl/src/* || true
        mypy --html-report  reports/fastapi_app/mypy/ fastapi_app/src/* || true

    - name: Upload reports
      uses: actions/upload-artifact@v3
      with:
        name: reports
        path: reports/

    - name: Telegram notification
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ job.status }}
